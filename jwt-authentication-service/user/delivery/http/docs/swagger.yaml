definitions:
  http.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  http.TokenPayload:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  http.UserPayload:
    properties:
      description:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: Greetings method (test method)
      produces:
      - application/json
      responses: {}
      summary: Greetings method
      tags:
      - greetings
  /api/v1/users:
    post:
      consumes:
      - application/json
      description: Crete a new user in jwt-authentication-service
      parameters:
      - description: New user payload
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/http.UserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.UserPayload'
      summary: Create a new user
      tags:
      - user
  /api/v1/users/token:
    post:
      consumes:
      - application/json
      description: Generate a new access token for user
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/http.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.TokenPayload'
      summary: Get token for user
      tags:
      - user
swagger: "2.0"
